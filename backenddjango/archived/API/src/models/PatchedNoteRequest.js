/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PatchedNoteRequest model module.
 * @module models/PatchedNoteRequest
 * @version 1.0.0
 */
class PatchedNoteRequest {
    /**
     * Constructs a new <code>PatchedNoteRequest</code>.
     * Serializer for notes
     * @alias module:models/PatchedNoteRequest
     */
    constructor() { 
        
        PatchedNoteRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchedNoteRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/PatchedNoteRequest} obj Optional instance to populate.
     * @return {module:models/PatchedNoteRequest} The populated <code>PatchedNoteRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchedNoteRequest();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('remind_date')) {
                obj['remind_date'] = ApiClient.convertToType(data['remind_date'], 'Date');
            }
            if (data.hasOwnProperty('application')) {
                obj['application'] = ApiClient.convertToType(data['application'], 'Number');
            }
            if (data.hasOwnProperty('borrower')) {
                obj['borrower'] = ApiClient.convertToType(data['borrower'], 'Number');
            }
            if (data.hasOwnProperty('assigned_to')) {
                obj['assigned_to'] = ApiClient.convertToType(data['assigned_to'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatchedNoteRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchedNoteRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }

        return true;
    }


}



/**
 * @member {String} title
 */
PatchedNoteRequest.prototype['title'] = undefined;

/**
 * @member {String} content
 */
PatchedNoteRequest.prototype['content'] = undefined;

/**
 * @member {Date} remind_date
 */
PatchedNoteRequest.prototype['remind_date'] = undefined;

/**
 * @member {Number} application
 */
PatchedNoteRequest.prototype['application'] = undefined;

/**
 * @member {Number} borrower
 */
PatchedNoteRequest.prototype['borrower'] = undefined;

/**
 * @member {Number} assigned_to
 */
PatchedNoteRequest.prototype['assigned_to'] = undefined;






export default PatchedNoteRequest;

