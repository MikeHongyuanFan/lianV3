/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Ledger from './Ledger';

/**
 * The ApplicationLedger model module.
 * @module models/ApplicationLedger
 * @version 1.0.0
 */
class ApplicationLedger {
    /**
     * Constructs a new <code>ApplicationLedger</code>.
     * Serializer for application ledger summary
     * @alias module:models/ApplicationLedger
     * @param ledgerEntries {Array.<module:models/Ledger>} 
     * @param totalFunded {Number} 
     * @param totalRepaid {Number} 
     * @param totalFees {Number} 
     * @param balance {Number} 
     */
    constructor(ledgerEntries, totalFunded, totalRepaid, totalFees, balance) { 
        
        ApplicationLedger.initialize(this, ledgerEntries, totalFunded, totalRepaid, totalFees, balance);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ledgerEntries, totalFunded, totalRepaid, totalFees, balance) { 
        obj['ledger_entries'] = ledgerEntries;
        obj['total_funded'] = totalFunded;
        obj['total_repaid'] = totalRepaid;
        obj['total_fees'] = totalFees;
        obj['balance'] = balance;
    }

    /**
     * Constructs a <code>ApplicationLedger</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/ApplicationLedger} obj Optional instance to populate.
     * @return {module:models/ApplicationLedger} The populated <code>ApplicationLedger</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationLedger();

            if (data.hasOwnProperty('ledger_entries')) {
                obj['ledger_entries'] = ApiClient.convertToType(data['ledger_entries'], [Ledger]);
            }
            if (data.hasOwnProperty('total_funded')) {
                obj['total_funded'] = ApiClient.convertToType(data['total_funded'], 'Number');
            }
            if (data.hasOwnProperty('total_repaid')) {
                obj['total_repaid'] = ApiClient.convertToType(data['total_repaid'], 'Number');
            }
            if (data.hasOwnProperty('total_fees')) {
                obj['total_fees'] = ApiClient.convertToType(data['total_fees'], 'Number');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationLedger</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationLedger</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApplicationLedger.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['ledger_entries']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ledger_entries'])) {
                throw new Error("Expected the field `ledger_entries` to be an array in the JSON data but got " + data['ledger_entries']);
            }
            // validate the optional field `ledger_entries` (array)
            for (const item of data['ledger_entries']) {
                Ledger.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['total_funded'] && !(typeof data['total_funded'] === 'string' || data['total_funded'] instanceof String)) {
            throw new Error("Expected the field `total_funded` to be a primitive type in the JSON string but got " + data['total_funded']);
        }
        // ensure the json data is a string
        if (data['total_repaid'] && !(typeof data['total_repaid'] === 'string' || data['total_repaid'] instanceof String)) {
            throw new Error("Expected the field `total_repaid` to be a primitive type in the JSON string but got " + data['total_repaid']);
        }
        // ensure the json data is a string
        if (data['total_fees'] && !(typeof data['total_fees'] === 'string' || data['total_fees'] instanceof String)) {
            throw new Error("Expected the field `total_fees` to be a primitive type in the JSON string but got " + data['total_fees']);
        }
        // ensure the json data is a string
        if (data['balance'] && !(typeof data['balance'] === 'string' || data['balance'] instanceof String)) {
            throw new Error("Expected the field `balance` to be a primitive type in the JSON string but got " + data['balance']);
        }

        return true;
    }


}

ApplicationLedger.RequiredProperties = ["ledger_entries", "total_funded", "total_repaid", "total_fees", "balance"];

/**
 * @member {Array.<module:models/Ledger>} ledger_entries
 */
ApplicationLedger.prototype['ledger_entries'] = undefined;

/**
 * @member {Number} total_funded
 */
ApplicationLedger.prototype['total_funded'] = undefined;

/**
 * @member {Number} total_repaid
 */
ApplicationLedger.prototype['total_repaid'] = undefined;

/**
 * @member {Number} total_fees
 */
ApplicationLedger.prototype['total_fees'] = undefined;

/**
 * @member {Number} balance
 */
ApplicationLedger.prototype['balance'] = undefined;






export default ApplicationLedger;

