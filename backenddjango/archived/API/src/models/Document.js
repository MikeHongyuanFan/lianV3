/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DocumentTypeEnum from './DocumentTypeEnum';

/**
 * The Document model module.
 * @module models/Document
 * @version 1.0.0
 */
class Document {
    /**
     * Constructs a new <code>Document</code>.
     * Serializer for documents
     * @alias module:models/Document
     * @param id {Number} 
     * @param documentTypeDisplay {String} 
     * @param createdByName {String} 
     * @param fileUrl {String} 
     * @param file {String} 
     * @param fileName {String} 
     * @param fileSize {Number} File size in bytes
     * @param fileType {String} MIME type
     * @param version {Number} 
     * @param createdAt {Date} 
     * @param updatedAt {Date} 
     * @param createdBy {Number} 
     */
    constructor(id, documentTypeDisplay, createdByName, fileUrl, file, fileName, fileSize, fileType, version, createdAt, updatedAt, createdBy) { 
        
        Document.initialize(this, id, documentTypeDisplay, createdByName, fileUrl, file, fileName, fileSize, fileType, version, createdAt, updatedAt, createdBy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, documentTypeDisplay, createdByName, fileUrl, file, fileName, fileSize, fileType, version, createdAt, updatedAt, createdBy) { 
        obj['id'] = id;
        obj['document_type_display'] = documentTypeDisplay;
        obj['created_by_name'] = createdByName;
        obj['file_url'] = fileUrl;
        obj['file'] = file;
        obj['file_name'] = fileName;
        obj['file_size'] = fileSize;
        obj['file_type'] = fileType;
        obj['version'] = version;
        obj['created_at'] = createdAt;
        obj['updated_at'] = updatedAt;
        obj['created_by'] = createdBy;
    }

    /**
     * Constructs a <code>Document</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/Document} obj Optional instance to populate.
     * @return {module:models/Document} The populated <code>Document</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Document();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('document_type_display')) {
                obj['document_type_display'] = ApiClient.convertToType(data['document_type_display'], 'String');
            }
            if (data.hasOwnProperty('created_by_name')) {
                obj['created_by_name'] = ApiClient.convertToType(data['created_by_name'], 'String');
            }
            if (data.hasOwnProperty('file_url')) {
                obj['file_url'] = ApiClient.convertToType(data['file_url'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('document_type')) {
                obj['document_type'] = DocumentTypeEnum.constructFromObject(data['document_type']);
            }
            if (data.hasOwnProperty('file')) {
                obj['file'] = ApiClient.convertToType(data['file'], 'String');
            }
            if (data.hasOwnProperty('file_name')) {
                obj['file_name'] = ApiClient.convertToType(data['file_name'], 'String');
            }
            if (data.hasOwnProperty('file_size')) {
                obj['file_size'] = ApiClient.convertToType(data['file_size'], 'Number');
            }
            if (data.hasOwnProperty('file_type')) {
                obj['file_type'] = ApiClient.convertToType(data['file_type'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('previous_version')) {
                obj['previous_version'] = ApiClient.convertToType(data['previous_version'], 'Number');
            }
            if (data.hasOwnProperty('application')) {
                obj['application'] = ApiClient.convertToType(data['application'], 'Number');
            }
            if (data.hasOwnProperty('borrower')) {
                obj['borrower'] = ApiClient.convertToType(data['borrower'], 'Number');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Document</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Document</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Document.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['document_type_display'] && !(typeof data['document_type_display'] === 'string' || data['document_type_display'] instanceof String)) {
            throw new Error("Expected the field `document_type_display` to be a primitive type in the JSON string but got " + data['document_type_display']);
        }
        // ensure the json data is a string
        if (data['created_by_name'] && !(typeof data['created_by_name'] === 'string' || data['created_by_name'] instanceof String)) {
            throw new Error("Expected the field `created_by_name` to be a primitive type in the JSON string but got " + data['created_by_name']);
        }
        // ensure the json data is a string
        if (data['file_url'] && !(typeof data['file_url'] === 'string' || data['file_url'] instanceof String)) {
            throw new Error("Expected the field `file_url` to be a primitive type in the JSON string but got " + data['file_url']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['file'] && !(typeof data['file'] === 'string' || data['file'] instanceof String)) {
            throw new Error("Expected the field `file` to be a primitive type in the JSON string but got " + data['file']);
        }
        // ensure the json data is a string
        if (data['file_name'] && !(typeof data['file_name'] === 'string' || data['file_name'] instanceof String)) {
            throw new Error("Expected the field `file_name` to be a primitive type in the JSON string but got " + data['file_name']);
        }
        // ensure the json data is a string
        if (data['file_type'] && !(typeof data['file_type'] === 'string' || data['file_type'] instanceof String)) {
            throw new Error("Expected the field `file_type` to be a primitive type in the JSON string but got " + data['file_type']);
        }

        return true;
    }


}

Document.RequiredProperties = ["id", "document_type_display", "created_by_name", "file_url", "file", "file_name", "file_size", "file_type", "version", "created_at", "updated_at", "created_by"];

/**
 * @member {Number} id
 */
Document.prototype['id'] = undefined;

/**
 * @member {String} document_type_display
 */
Document.prototype['document_type_display'] = undefined;

/**
 * @member {String} created_by_name
 */
Document.prototype['created_by_name'] = undefined;

/**
 * @member {String} file_url
 */
Document.prototype['file_url'] = undefined;

/**
 * @member {String} title
 */
Document.prototype['title'] = undefined;

/**
 * @member {String} description
 */
Document.prototype['description'] = undefined;

/**
 * @member {module:models/DocumentTypeEnum} document_type
 */
Document.prototype['document_type'] = undefined;

/**
 * @member {String} file
 */
Document.prototype['file'] = undefined;

/**
 * @member {String} file_name
 */
Document.prototype['file_name'] = undefined;

/**
 * File size in bytes
 * @member {Number} file_size
 */
Document.prototype['file_size'] = undefined;

/**
 * MIME type
 * @member {String} file_type
 */
Document.prototype['file_type'] = undefined;

/**
 * @member {Number} version
 */
Document.prototype['version'] = undefined;

/**
 * @member {Date} created_at
 */
Document.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
Document.prototype['updated_at'] = undefined;

/**
 * @member {Number} previous_version
 */
Document.prototype['previous_version'] = undefined;

/**
 * @member {Number} application
 */
Document.prototype['application'] = undefined;

/**
 * @member {Number} borrower
 */
Document.prototype['borrower'] = undefined;

/**
 * @member {Number} created_by
 */
Document.prototype['created_by'] = undefined;






export default Document;

