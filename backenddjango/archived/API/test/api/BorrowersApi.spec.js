/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CrmClientJs);
  }
}(this, function(expect, CrmClientJs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CrmClientJs.BorrowersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BorrowersApi', function() {
    describe('borrowerGuarantorDetail', function() {
      it('should call borrowerGuarantorDetail successfully', function(done) {
        //uncomment below and update the code to test borrowerGuarantorDetail
        //instance.borrowerGuarantorDetail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersApplicationsRetrieve', function() {
      it('should call borrowersApplicationsRetrieve successfully', function(done) {
        //uncomment below and update the code to test borrowersApplicationsRetrieve
        //instance.borrowersApplicationsRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersCompanyList', function() {
      it('should call borrowersCompanyList successfully', function(done) {
        //uncomment below and update the code to test borrowersCompanyList
        //instance.borrowersCompanyList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersCreate', function() {
      it('should call borrowersCreate successfully', function(done) {
        //uncomment below and update the code to test borrowersCreate
        //instance.borrowersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersDestroy', function() {
      it('should call borrowersDestroy successfully', function(done) {
        //uncomment below and update the code to test borrowersDestroy
        //instance.borrowersDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersFinancialSummaryRetrieve', function() {
      it('should call borrowersFinancialSummaryRetrieve successfully', function(done) {
        //uncomment below and update the code to test borrowersFinancialSummaryRetrieve
        //instance.borrowersFinancialSummaryRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersGuarantorsByBorrowerId', function() {
      it('should call borrowersGuarantorsByBorrowerId successfully', function(done) {
        //uncomment below and update the code to test borrowersGuarantorsByBorrowerId
        //instance.borrowersGuarantorsByBorrowerId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersGuarantorsCreate', function() {
      it('should call borrowersGuarantorsCreate successfully', function(done) {
        //uncomment below and update the code to test borrowersGuarantorsCreate
        //instance.borrowersGuarantorsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersGuarantorsDestroy', function() {
      it('should call borrowersGuarantorsDestroy successfully', function(done) {
        //uncomment below and update the code to test borrowersGuarantorsDestroy
        //instance.borrowersGuarantorsDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersGuarantorsGuaranteedApplicationsRetrieve', function() {
      it('should call borrowersGuarantorsGuaranteedApplicationsRetrieve successfully', function(done) {
        //uncomment below and update the code to test borrowersGuarantorsGuaranteedApplicationsRetrieve
        //instance.borrowersGuarantorsGuaranteedApplicationsRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersGuarantorsList', function() {
      it('should call borrowersGuarantorsList successfully', function(done) {
        //uncomment below and update the code to test borrowersGuarantorsList
        //instance.borrowersGuarantorsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersGuarantorsPartialUpdate', function() {
      it('should call borrowersGuarantorsPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test borrowersGuarantorsPartialUpdate
        //instance.borrowersGuarantorsPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersGuarantorsUpdate', function() {
      it('should call borrowersGuarantorsUpdate successfully', function(done) {
        //uncomment below and update the code to test borrowersGuarantorsUpdate
        //instance.borrowersGuarantorsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersList', function() {
      it('should call borrowersList successfully', function(done) {
        //uncomment below and update the code to test borrowersList
        //instance.borrowersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersPartialUpdate', function() {
      it('should call borrowersPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test borrowersPartialUpdate
        //instance.borrowersPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersRetrieve', function() {
      it('should call borrowersRetrieve successfully', function(done) {
        //uncomment below and update the code to test borrowersRetrieve
        //instance.borrowersRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('borrowersUpdate', function() {
      it('should call borrowersUpdate successfully', function(done) {
        //uncomment below and update the code to test borrowersUpdate
        //instance.borrowersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
