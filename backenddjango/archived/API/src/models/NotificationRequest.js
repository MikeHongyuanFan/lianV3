/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NotificationTypeEnum from './NotificationTypeEnum';

/**
 * The NotificationRequest model module.
 * @module models/NotificationRequest
 * @version 1.0.0
 */
class NotificationRequest {
    /**
     * Constructs a new <code>NotificationRequest</code>.
     * Serializer for Notification model
     * @alias module:models/NotificationRequest
     * @param title {String} 
     * @param message {String} 
     * @param notificationType {module:models/NotificationTypeEnum} 
     * @param user {Number} 
     */
    constructor(title, message, notificationType, user) { 
        
        NotificationRequest.initialize(this, title, message, notificationType, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, title, message, notificationType, user) { 
        obj['title'] = title;
        obj['message'] = message;
        obj['notification_type'] = notificationType;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>NotificationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/NotificationRequest} obj Optional instance to populate.
     * @return {module:models/NotificationRequest} The populated <code>NotificationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationRequest();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('notification_type')) {
                obj['notification_type'] = NotificationTypeEnum.constructFromObject(data['notification_type']);
            }
            if (data.hasOwnProperty('related_object_id')) {
                obj['related_object_id'] = ApiClient.convertToType(data['related_object_id'], 'Number');
            }
            if (data.hasOwnProperty('related_object_type')) {
                obj['related_object_type'] = ApiClient.convertToType(data['related_object_type'], 'String');
            }
            if (data.hasOwnProperty('is_read')) {
                obj['is_read'] = ApiClient.convertToType(data['is_read'], 'Boolean');
            }
            if (data.hasOwnProperty('read_at')) {
                obj['read_at'] = ApiClient.convertToType(data['read_at'], 'Date');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NotificationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['related_object_type'] && !(typeof data['related_object_type'] === 'string' || data['related_object_type'] instanceof String)) {
            throw new Error("Expected the field `related_object_type` to be a primitive type in the JSON string but got " + data['related_object_type']);
        }

        return true;
    }


}

NotificationRequest.RequiredProperties = ["title", "message", "notification_type", "user"];

/**
 * @member {String} title
 */
NotificationRequest.prototype['title'] = undefined;

/**
 * @member {String} message
 */
NotificationRequest.prototype['message'] = undefined;

/**
 * @member {module:models/NotificationTypeEnum} notification_type
 */
NotificationRequest.prototype['notification_type'] = undefined;

/**
 * @member {Number} related_object_id
 */
NotificationRequest.prototype['related_object_id'] = undefined;

/**
 * @member {String} related_object_type
 */
NotificationRequest.prototype['related_object_type'] = undefined;

/**
 * @member {Boolean} is_read
 */
NotificationRequest.prototype['is_read'] = undefined;

/**
 * @member {Date} read_at
 */
NotificationRequest.prototype['read_at'] = undefined;

/**
 * @member {Number} user
 */
NotificationRequest.prototype['user'] = undefined;






export default NotificationRequest;

