/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BlankEnum from './BlankEnum';
import ResidencyStatusEnum from './ResidencyStatusEnum';

/**
 * The BorrowerResidencyStatus model module.
 * @module models/BorrowerResidencyStatus
 * @version 1.0.0
 */
class BorrowerResidencyStatus {
    /**
     * Constructs a new <code>BorrowerResidencyStatus</code>.
     * @alias module:models/BorrowerResidencyStatus
     * @param {(module:models/BlankEnum|module:models/ResidencyStatusEnum)} instance The actual instance to initialize BorrowerResidencyStatus.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ResidencyStatusEnum") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ResidencyStatusEnum.validateJSON(instance); // throw an exception if no match
                // create ResidencyStatusEnum from JS object
                this.actualInstance = ResidencyStatusEnum.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ResidencyStatusEnum
            errorMessages.push("Failed to construct ResidencyStatusEnum: " + err)
        }

        try {
            if (typeof instance === "BlankEnum") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                BlankEnum.validateJSON(instance); // throw an exception if no match
                // create BlankEnum from JS object
                this.actualInstance = BlankEnum.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into BlankEnum
            errorMessages.push("Failed to construct BlankEnum: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `BorrowerResidencyStatus` with oneOf schemas BlankEnum, ResidencyStatusEnum. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `BorrowerResidencyStatus` with oneOf schemas BlankEnum, ResidencyStatusEnum. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>BorrowerResidencyStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/BorrowerResidencyStatus} obj Optional instance to populate.
     * @return {module:models/BorrowerResidencyStatus} The populated <code>BorrowerResidencyStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        return new BorrowerResidencyStatus(data);
    }

    /**
     * Gets the actual instance, which can be <code>BlankEnum</code>, <code>ResidencyStatusEnum</code>.
     * @return {(module:models/BlankEnum|module:models/ResidencyStatusEnum)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>BlankEnum</code>, <code>ResidencyStatusEnum</code>.
     * @param {(module:models/BlankEnum|module:models/ResidencyStatusEnum)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = BorrowerResidencyStatus.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of BorrowerResidencyStatus from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:models/BorrowerResidencyStatus} An instance of BorrowerResidencyStatus.
     */
    static fromJSON = function(json_string){
        return BorrowerResidencyStatus.constructFromObject(JSON.parse(json_string));
    }
}


BorrowerResidencyStatus.OneOf = ["BlankEnum", "ResidencyStatusEnum"];

export default BorrowerResidencyStatus;

