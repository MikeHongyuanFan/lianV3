/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BorrowerFinancialSummary model module.
 * @module models/BorrowerFinancialSummary
 * @version 1.0.0
 */
class BorrowerFinancialSummary {
    /**
     * Constructs a new <code>BorrowerFinancialSummary</code>.
     * Serializer for borrower financial summary
     * @alias module:models/BorrowerFinancialSummary
     * @param totalApplications {Number} 
     * @param totalFunded {Number} 
     * @param activeLoans {Number} 
     * @param activeLoanAmount {Number} 
     * @param completedLoans {Number} 
     * @param completedLoanAmount {Number} 
     */
    constructor(totalApplications, totalFunded, activeLoans, activeLoanAmount, completedLoans, completedLoanAmount) { 
        
        BorrowerFinancialSummary.initialize(this, totalApplications, totalFunded, activeLoans, activeLoanAmount, completedLoans, completedLoanAmount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, totalApplications, totalFunded, activeLoans, activeLoanAmount, completedLoans, completedLoanAmount) { 
        obj['total_applications'] = totalApplications;
        obj['total_funded'] = totalFunded;
        obj['active_loans'] = activeLoans;
        obj['active_loan_amount'] = activeLoanAmount;
        obj['completed_loans'] = completedLoans;
        obj['completed_loan_amount'] = completedLoanAmount;
    }

    /**
     * Constructs a <code>BorrowerFinancialSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/BorrowerFinancialSummary} obj Optional instance to populate.
     * @return {module:models/BorrowerFinancialSummary} The populated <code>BorrowerFinancialSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BorrowerFinancialSummary();

            if (data.hasOwnProperty('total_applications')) {
                obj['total_applications'] = ApiClient.convertToType(data['total_applications'], 'Number');
            }
            if (data.hasOwnProperty('total_funded')) {
                obj['total_funded'] = ApiClient.convertToType(data['total_funded'], 'Number');
            }
            if (data.hasOwnProperty('active_loans')) {
                obj['active_loans'] = ApiClient.convertToType(data['active_loans'], 'Number');
            }
            if (data.hasOwnProperty('active_loan_amount')) {
                obj['active_loan_amount'] = ApiClient.convertToType(data['active_loan_amount'], 'Number');
            }
            if (data.hasOwnProperty('completed_loans')) {
                obj['completed_loans'] = ApiClient.convertToType(data['completed_loans'], 'Number');
            }
            if (data.hasOwnProperty('completed_loan_amount')) {
                obj['completed_loan_amount'] = ApiClient.convertToType(data['completed_loan_amount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BorrowerFinancialSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BorrowerFinancialSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BorrowerFinancialSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['total_funded'] && !(typeof data['total_funded'] === 'string' || data['total_funded'] instanceof String)) {
            throw new Error("Expected the field `total_funded` to be a primitive type in the JSON string but got " + data['total_funded']);
        }
        // ensure the json data is a string
        if (data['active_loan_amount'] && !(typeof data['active_loan_amount'] === 'string' || data['active_loan_amount'] instanceof String)) {
            throw new Error("Expected the field `active_loan_amount` to be a primitive type in the JSON string but got " + data['active_loan_amount']);
        }
        // ensure the json data is a string
        if (data['completed_loan_amount'] && !(typeof data['completed_loan_amount'] === 'string' || data['completed_loan_amount'] instanceof String)) {
            throw new Error("Expected the field `completed_loan_amount` to be a primitive type in the JSON string but got " + data['completed_loan_amount']);
        }

        return true;
    }


}

BorrowerFinancialSummary.RequiredProperties = ["total_applications", "total_funded", "active_loans", "active_loan_amount", "completed_loans", "completed_loan_amount"];

/**
 * @member {Number} total_applications
 */
BorrowerFinancialSummary.prototype['total_applications'] = undefined;

/**
 * @member {Number} total_funded
 */
BorrowerFinancialSummary.prototype['total_funded'] = undefined;

/**
 * @member {Number} active_loans
 */
BorrowerFinancialSummary.prototype['active_loans'] = undefined;

/**
 * @member {Number} active_loan_amount
 */
BorrowerFinancialSummary.prototype['active_loan_amount'] = undefined;

/**
 * @member {Number} completed_loans
 */
BorrowerFinancialSummary.prototype['completed_loans'] = undefined;

/**
 * @member {Number} completed_loan_amount
 */
BorrowerFinancialSummary.prototype['completed_loan_amount'] = undefined;






export default BorrowerFinancialSummary;

