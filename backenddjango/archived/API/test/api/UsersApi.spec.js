/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CrmClientJs);
  }
}(this, function(expect, CrmClientJs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CrmClientJs.UsersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersApi', function() {
    describe('usersAuthLoginCreate', function() {
      it('should call usersAuthLoginCreate successfully', function(done) {
        //uncomment below and update the code to test usersAuthLoginCreate
        //instance.usersAuthLoginCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersAuthRefreshCreate', function() {
      it('should call usersAuthRefreshCreate successfully', function(done) {
        //uncomment below and update the code to test usersAuthRefreshCreate
        //instance.usersAuthRefreshCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersAuthRegisterCreate', function() {
      it('should call usersAuthRegisterCreate successfully', function(done) {
        //uncomment below and update the code to test usersAuthRegisterCreate
        //instance.usersAuthRegisterCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersNotificationPreferencesRetrieve', function() {
      it('should call usersNotificationPreferencesRetrieve successfully', function(done) {
        //uncomment below and update the code to test usersNotificationPreferencesRetrieve
        //instance.usersNotificationPreferencesRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersNotificationPreferencesUpdate', function() {
      it('should call usersNotificationPreferencesUpdate successfully', function(done) {
        //uncomment below and update the code to test usersNotificationPreferencesUpdate
        //instance.usersNotificationPreferencesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersNotificationsCountRetrieve', function() {
      it('should call usersNotificationsCountRetrieve successfully', function(done) {
        //uncomment below and update the code to test usersNotificationsCountRetrieve
        //instance.usersNotificationsCountRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersNotificationsList', function() {
      it('should call usersNotificationsList successfully', function(done) {
        //uncomment below and update the code to test usersNotificationsList
        //instance.usersNotificationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersNotificationsMarkReadCreate', function() {
      it('should call usersNotificationsMarkReadCreate successfully', function(done) {
        //uncomment below and update the code to test usersNotificationsMarkReadCreate
        //instance.usersNotificationsMarkReadCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersNotificationsViewsetList', function() {
      it('should call usersNotificationsViewsetList successfully', function(done) {
        //uncomment below and update the code to test usersNotificationsViewsetList
        //instance.usersNotificationsViewsetList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersNotificationsViewsetMarkAllAsReadCreate', function() {
      it('should call usersNotificationsViewsetMarkAllAsReadCreate successfully', function(done) {
        //uncomment below and update the code to test usersNotificationsViewsetMarkAllAsReadCreate
        //instance.usersNotificationsViewsetMarkAllAsReadCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersNotificationsViewsetMarkAsReadCreate', function() {
      it('should call usersNotificationsViewsetMarkAsReadCreate successfully', function(done) {
        //uncomment below and update the code to test usersNotificationsViewsetMarkAsReadCreate
        //instance.usersNotificationsViewsetMarkAsReadCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersNotificationsViewsetRetrieve', function() {
      it('should call usersNotificationsViewsetRetrieve successfully', function(done) {
        //uncomment below and update the code to test usersNotificationsViewsetRetrieve
        //instance.usersNotificationsViewsetRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersNotificationsViewsetUnreadCountRetrieve', function() {
      it('should call usersNotificationsViewsetUnreadCountRetrieve successfully', function(done) {
        //uncomment below and update the code to test usersNotificationsViewsetUnreadCountRetrieve
        //instance.usersNotificationsViewsetUnreadCountRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersProfileRetrieve', function() {
      it('should call usersProfileRetrieve successfully', function(done) {
        //uncomment below and update the code to test usersProfileRetrieve
        //instance.usersProfileRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersProfileUpdatePartialUpdate', function() {
      it('should call usersProfileUpdatePartialUpdate successfully', function(done) {
        //uncomment below and update the code to test usersProfileUpdatePartialUpdate
        //instance.usersProfileUpdatePartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersProfileUpdateUpdate', function() {
      it('should call usersProfileUpdateUpdate successfully', function(done) {
        //uncomment below and update the code to test usersProfileUpdateUpdate
        //instance.usersProfileUpdateUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsersCreate', function() {
      it('should call usersUsersCreate successfully', function(done) {
        //uncomment below and update the code to test usersUsersCreate
        //instance.usersUsersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsersDestroy', function() {
      it('should call usersUsersDestroy successfully', function(done) {
        //uncomment below and update the code to test usersUsersDestroy
        //instance.usersUsersDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsersList', function() {
      it('should call usersUsersList successfully', function(done) {
        //uncomment below and update the code to test usersUsersList
        //instance.usersUsersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsersMeRetrieve', function() {
      it('should call usersUsersMeRetrieve successfully', function(done) {
        //uncomment below and update the code to test usersUsersMeRetrieve
        //instance.usersUsersMeRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsersPartialUpdate', function() {
      it('should call usersUsersPartialUpdate successfully', function(done) {
        //uncomment below and update the code to test usersUsersPartialUpdate
        //instance.usersUsersPartialUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsersRetrieve', function() {
      it('should call usersUsersRetrieve successfully', function(done) {
        //uncomment below and update the code to test usersUsersRetrieve
        //instance.usersUsersRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUsersUpdate', function() {
      it('should call usersUsersUpdate successfully', function(done) {
        //uncomment below and update the code to test usersUsersUpdate
        //instance.usersUsersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
