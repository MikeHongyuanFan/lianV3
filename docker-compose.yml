services:
  # Backend services
  backend:
    build:
      context: ./backenddjango
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py makemigrations --merge --noinput &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backenddjango:/app
      - backend_static:/app/staticfiles
      - backend_media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1
      - DATABASE_URL=postgres://postgres:postgres@db:5432/crm_loan_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/0
    networks:
      - app-network

  # Frontend service
  frontend:
    build:
      context: ./frontendvue/frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontendvue/frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Database service
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=crm_loan_db
    ports:
      - "5432:5432"
    networks:
      - app-network

  # Redis service
  redis:
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Celery worker
  celery:
    build:
      context: ./backenddjango
      dockerfile: Dockerfile
    command: celery -A crm_backend worker -l info
    volumes:
      - ./backenddjango:/app
    depends_on:
      - backend
      - redis
    environment:
      - DEBUG=1
      - DATABASE_URL=postgres://postgres:postgres@db:5432/crm_loan_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/0
    networks:
      - app-network

volumes:
  postgres_data:
  backend_static:
  backend_media:

networks:
  app-network:
    driver: bridge
