/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApplicationVolumeReport model module.
 * @module models/ApplicationVolumeReport
 * @version 1.0.0
 */
class ApplicationVolumeReport {
    /**
     * Constructs a new <code>ApplicationVolumeReport</code>.
     * Serializer for application volume report data
     * @alias module:models/ApplicationVolumeReport
     * @param totalApplications {Number} 
     * @param totalLoanAmount {Number} 
     * @param averageLoanAmount {Number} 
     * @param stageBreakdown {Object.<String, Number>} 
     * @param timeBreakdown {Array.<Object.<String, Object>>} 
     * @param bdBreakdown {Array.<Object.<String, Object>>} 
     * @param typeBreakdown {Object.<String, Number>} 
     */
    constructor(totalApplications, totalLoanAmount, averageLoanAmount, stageBreakdown, timeBreakdown, bdBreakdown, typeBreakdown) { 
        
        ApplicationVolumeReport.initialize(this, totalApplications, totalLoanAmount, averageLoanAmount, stageBreakdown, timeBreakdown, bdBreakdown, typeBreakdown);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, totalApplications, totalLoanAmount, averageLoanAmount, stageBreakdown, timeBreakdown, bdBreakdown, typeBreakdown) { 
        obj['total_applications'] = totalApplications;
        obj['total_loan_amount'] = totalLoanAmount;
        obj['average_loan_amount'] = averageLoanAmount;
        obj['stage_breakdown'] = stageBreakdown;
        obj['time_breakdown'] = timeBreakdown;
        obj['bd_breakdown'] = bdBreakdown;
        obj['type_breakdown'] = typeBreakdown;
    }

    /**
     * Constructs a <code>ApplicationVolumeReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/ApplicationVolumeReport} obj Optional instance to populate.
     * @return {module:models/ApplicationVolumeReport} The populated <code>ApplicationVolumeReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApplicationVolumeReport();

            if (data.hasOwnProperty('total_applications')) {
                obj['total_applications'] = ApiClient.convertToType(data['total_applications'], 'Number');
            }
            if (data.hasOwnProperty('total_loan_amount')) {
                obj['total_loan_amount'] = ApiClient.convertToType(data['total_loan_amount'], 'Number');
            }
            if (data.hasOwnProperty('average_loan_amount')) {
                obj['average_loan_amount'] = ApiClient.convertToType(data['average_loan_amount'], 'Number');
            }
            if (data.hasOwnProperty('stage_breakdown')) {
                obj['stage_breakdown'] = ApiClient.convertToType(data['stage_breakdown'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('time_breakdown')) {
                obj['time_breakdown'] = ApiClient.convertToType(data['time_breakdown'], [{'String': Object}]);
            }
            if (data.hasOwnProperty('bd_breakdown')) {
                obj['bd_breakdown'] = ApiClient.convertToType(data['bd_breakdown'], [{'String': Object}]);
            }
            if (data.hasOwnProperty('type_breakdown')) {
                obj['type_breakdown'] = ApiClient.convertToType(data['type_breakdown'], {'String': 'Number'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApplicationVolumeReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApplicationVolumeReport</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApplicationVolumeReport.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['total_loan_amount'] && !(typeof data['total_loan_amount'] === 'string' || data['total_loan_amount'] instanceof String)) {
            throw new Error("Expected the field `total_loan_amount` to be a primitive type in the JSON string but got " + data['total_loan_amount']);
        }
        // ensure the json data is a string
        if (data['average_loan_amount'] && !(typeof data['average_loan_amount'] === 'string' || data['average_loan_amount'] instanceof String)) {
            throw new Error("Expected the field `average_loan_amount` to be a primitive type in the JSON string but got " + data['average_loan_amount']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['time_breakdown'])) {
            throw new Error("Expected the field `time_breakdown` to be an array in the JSON data but got " + data['time_breakdown']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['bd_breakdown'])) {
            throw new Error("Expected the field `bd_breakdown` to be an array in the JSON data but got " + data['bd_breakdown']);
        }

        return true;
    }


}

ApplicationVolumeReport.RequiredProperties = ["total_applications", "total_loan_amount", "average_loan_amount", "stage_breakdown", "time_breakdown", "bd_breakdown", "type_breakdown"];

/**
 * @member {Number} total_applications
 */
ApplicationVolumeReport.prototype['total_applications'] = undefined;

/**
 * @member {Number} total_loan_amount
 */
ApplicationVolumeReport.prototype['total_loan_amount'] = undefined;

/**
 * @member {Number} average_loan_amount
 */
ApplicationVolumeReport.prototype['average_loan_amount'] = undefined;

/**
 * @member {Object.<String, Number>} stage_breakdown
 */
ApplicationVolumeReport.prototype['stage_breakdown'] = undefined;

/**
 * @member {Array.<Object.<String, Object>>} time_breakdown
 */
ApplicationVolumeReport.prototype['time_breakdown'] = undefined;

/**
 * @member {Array.<Object.<String, Object>>} bd_breakdown
 */
ApplicationVolumeReport.prototype['bd_breakdown'] = undefined;

/**
 * @member {Object.<String, Number>} type_breakdown
 */
ApplicationVolumeReport.prototype['type_breakdown'] = undefined;






export default ApplicationVolumeReport;

