/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RecipientTypeEnum from './RecipientTypeEnum';

/**
 * The Reminder model module.
 * @module models/Reminder
 * @version 1.0.0
 */
class Reminder {
    /**
     * Constructs a new <code>Reminder</code>.
     * Serializer for reminders
     * @alias module:models/Reminder
     * @param id {Number} 
     * @param recipientType {module:models/RecipientTypeEnum} 
     * @param recipientEmail {String} 
     * @param sendDatetime {Date} 
     * @param emailBody {String} 
     * @param subject {String} 
     * @param createdBy {Number} 
     * @param createdByName {String} 
     * @param sendAsUserEmail {String} 
     * @param replyToUserEmail {String} 
     * @param isSent {Boolean} 
     * @param sentAt {Date} 
     * @param errorMessage {String} 
     * @param createdAt {Date} 
     * @param updatedAt {Date} 
     */
    constructor(id, recipientType, recipientEmail, sendDatetime, emailBody, subject, createdBy, createdByName, sendAsUserEmail, replyToUserEmail, isSent, sentAt, errorMessage, createdAt, updatedAt) { 
        
        Reminder.initialize(this, id, recipientType, recipientEmail, sendDatetime, emailBody, subject, createdBy, createdByName, sendAsUserEmail, replyToUserEmail, isSent, sentAt, errorMessage, createdAt, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, recipientType, recipientEmail, sendDatetime, emailBody, subject, createdBy, createdByName, sendAsUserEmail, replyToUserEmail, isSent, sentAt, errorMessage, createdAt, updatedAt) { 
        obj['id'] = id;
        obj['recipient_type'] = recipientType;
        obj['recipient_email'] = recipientEmail;
        obj['send_datetime'] = sendDatetime;
        obj['email_body'] = emailBody;
        obj['subject'] = subject;
        obj['created_by'] = createdBy;
        obj['created_by_name'] = createdByName;
        obj['send_as_user_email'] = sendAsUserEmail;
        obj['reply_to_user_email'] = replyToUserEmail;
        obj['is_sent'] = isSent;
        obj['sent_at'] = sentAt;
        obj['error_message'] = errorMessage;
        obj['created_at'] = createdAt;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>Reminder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/Reminder} obj Optional instance to populate.
     * @return {module:models/Reminder} The populated <code>Reminder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Reminder();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('recipient_type')) {
                obj['recipient_type'] = RecipientTypeEnum.constructFromObject(data['recipient_type']);
            }
            if (data.hasOwnProperty('recipient_email')) {
                obj['recipient_email'] = ApiClient.convertToType(data['recipient_email'], 'String');
            }
            if (data.hasOwnProperty('send_datetime')) {
                obj['send_datetime'] = ApiClient.convertToType(data['send_datetime'], 'Date');
            }
            if (data.hasOwnProperty('email_body')) {
                obj['email_body'] = ApiClient.convertToType(data['email_body'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'Number');
            }
            if (data.hasOwnProperty('created_by_name')) {
                obj['created_by_name'] = ApiClient.convertToType(data['created_by_name'], 'String');
            }
            if (data.hasOwnProperty('send_as_user')) {
                obj['send_as_user'] = ApiClient.convertToType(data['send_as_user'], 'Number');
            }
            if (data.hasOwnProperty('send_as_user_email')) {
                obj['send_as_user_email'] = ApiClient.convertToType(data['send_as_user_email'], 'String');
            }
            if (data.hasOwnProperty('reply_to_user')) {
                obj['reply_to_user'] = ApiClient.convertToType(data['reply_to_user'], 'Number');
            }
            if (data.hasOwnProperty('reply_to_user_email')) {
                obj['reply_to_user_email'] = ApiClient.convertToType(data['reply_to_user_email'], 'String');
            }
            if (data.hasOwnProperty('is_sent')) {
                obj['is_sent'] = ApiClient.convertToType(data['is_sent'], 'Boolean');
            }
            if (data.hasOwnProperty('sent_at')) {
                obj['sent_at'] = ApiClient.convertToType(data['sent_at'], 'Date');
            }
            if (data.hasOwnProperty('error_message')) {
                obj['error_message'] = ApiClient.convertToType(data['error_message'], 'String');
            }
            if (data.hasOwnProperty('related_application')) {
                obj['related_application'] = ApiClient.convertToType(data['related_application'], 'Number');
            }
            if (data.hasOwnProperty('related_borrower')) {
                obj['related_borrower'] = ApiClient.convertToType(data['related_borrower'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Reminder</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Reminder</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Reminder.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['recipient_email'] && !(typeof data['recipient_email'] === 'string' || data['recipient_email'] instanceof String)) {
            throw new Error("Expected the field `recipient_email` to be a primitive type in the JSON string but got " + data['recipient_email']);
        }
        // ensure the json data is a string
        if (data['email_body'] && !(typeof data['email_body'] === 'string' || data['email_body'] instanceof String)) {
            throw new Error("Expected the field `email_body` to be a primitive type in the JSON string but got " + data['email_body']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is a string
        if (data['created_by_name'] && !(typeof data['created_by_name'] === 'string' || data['created_by_name'] instanceof String)) {
            throw new Error("Expected the field `created_by_name` to be a primitive type in the JSON string but got " + data['created_by_name']);
        }
        // ensure the json data is a string
        if (data['send_as_user_email'] && !(typeof data['send_as_user_email'] === 'string' || data['send_as_user_email'] instanceof String)) {
            throw new Error("Expected the field `send_as_user_email` to be a primitive type in the JSON string but got " + data['send_as_user_email']);
        }
        // ensure the json data is a string
        if (data['reply_to_user_email'] && !(typeof data['reply_to_user_email'] === 'string' || data['reply_to_user_email'] instanceof String)) {
            throw new Error("Expected the field `reply_to_user_email` to be a primitive type in the JSON string but got " + data['reply_to_user_email']);
        }
        // ensure the json data is a string
        if (data['error_message'] && !(typeof data['error_message'] === 'string' || data['error_message'] instanceof String)) {
            throw new Error("Expected the field `error_message` to be a primitive type in the JSON string but got " + data['error_message']);
        }

        return true;
    }


}

Reminder.RequiredProperties = ["id", "recipient_type", "recipient_email", "send_datetime", "email_body", "subject", "created_by", "created_by_name", "send_as_user_email", "reply_to_user_email", "is_sent", "sent_at", "error_message", "created_at", "updated_at"];

/**
 * @member {Number} id
 */
Reminder.prototype['id'] = undefined;

/**
 * @member {module:models/RecipientTypeEnum} recipient_type
 */
Reminder.prototype['recipient_type'] = undefined;

/**
 * @member {String} recipient_email
 */
Reminder.prototype['recipient_email'] = undefined;

/**
 * @member {Date} send_datetime
 */
Reminder.prototype['send_datetime'] = undefined;

/**
 * @member {String} email_body
 */
Reminder.prototype['email_body'] = undefined;

/**
 * @member {String} subject
 */
Reminder.prototype['subject'] = undefined;

/**
 * @member {Number} created_by
 */
Reminder.prototype['created_by'] = undefined;

/**
 * @member {String} created_by_name
 */
Reminder.prototype['created_by_name'] = undefined;

/**
 * @member {Number} send_as_user
 */
Reminder.prototype['send_as_user'] = undefined;

/**
 * @member {String} send_as_user_email
 */
Reminder.prototype['send_as_user_email'] = undefined;

/**
 * @member {Number} reply_to_user
 */
Reminder.prototype['reply_to_user'] = undefined;

/**
 * @member {String} reply_to_user_email
 */
Reminder.prototype['reply_to_user_email'] = undefined;

/**
 * @member {Boolean} is_sent
 */
Reminder.prototype['is_sent'] = undefined;

/**
 * @member {Date} sent_at
 */
Reminder.prototype['sent_at'] = undefined;

/**
 * @member {String} error_message
 */
Reminder.prototype['error_message'] = undefined;

/**
 * @member {Number} related_application
 */
Reminder.prototype['related_application'] = undefined;

/**
 * @member {Number} related_borrower
 */
Reminder.prototype['related_borrower'] = undefined;

/**
 * @member {Date} created_at
 */
Reminder.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
Reminder.prototype['updated_at'] = undefined;






export default Reminder;

