/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Branch from './Branch';
import User from './User';

/**
 * The BrokerDetail model module.
 * @module models/BrokerDetail
 * @version 1.0.0
 */
class BrokerDetail {
    /**
     * Constructs a new <code>BrokerDetail</code>.
     * Serializer for detailed broker information
     * @alias module:models/BrokerDetail
     * @param id {Number} 
     * @param branch {module:models/Branch} 
     * @param createdBy {module:models/User} 
     * @param name {String} 
     * @param createdAt {Date} 
     * @param updatedAt {Date} 
     */
    constructor(id, branch, createdBy, name, createdAt, updatedAt) { 
        
        BrokerDetail.initialize(this, id, branch, createdBy, name, createdAt, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, branch, createdBy, name, createdAt, updatedAt) { 
        obj['id'] = id;
        obj['branch'] = branch;
        obj['created_by'] = createdBy;
        obj['name'] = name;
        obj['created_at'] = createdAt;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>BrokerDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/BrokerDetail} obj Optional instance to populate.
     * @return {module:models/BrokerDetail} The populated <code>BrokerDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BrokerDetail();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('branch')) {
                obj['branch'] = ApiClient.convertToType(data['branch'], Branch);
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], User);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('company')) {
                obj['company'] = ApiClient.convertToType(data['company'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('commission_bank_name')) {
                obj['commission_bank_name'] = ApiClient.convertToType(data['commission_bank_name'], 'String');
            }
            if (data.hasOwnProperty('commission_account_name')) {
                obj['commission_account_name'] = ApiClient.convertToType(data['commission_account_name'], 'String');
            }
            if (data.hasOwnProperty('commission_account_number')) {
                obj['commission_account_number'] = ApiClient.convertToType(data['commission_account_number'], 'String');
            }
            if (data.hasOwnProperty('commission_bsb')) {
                obj['commission_bsb'] = ApiClient.convertToType(data['commission_bsb'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'Number');
            }
            if (data.hasOwnProperty('bdms')) {
                obj['bdms'] = ApiClient.convertToType(data['bdms'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BrokerDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BrokerDetail</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BrokerDetail.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `branch`
        if (data['branch']) { // data not null
          Branch.validateJSON(data['branch']);
        }
        // validate the optional field `created_by`
        if (data['created_by']) { // data not null
          User.validateJSON(data['created_by']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['company'] && !(typeof data['company'] === 'string' || data['company'] instanceof String)) {
            throw new Error("Expected the field `company` to be a primitive type in the JSON string but got " + data['company']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['commission_bank_name'] && !(typeof data['commission_bank_name'] === 'string' || data['commission_bank_name'] instanceof String)) {
            throw new Error("Expected the field `commission_bank_name` to be a primitive type in the JSON string but got " + data['commission_bank_name']);
        }
        // ensure the json data is a string
        if (data['commission_account_name'] && !(typeof data['commission_account_name'] === 'string' || data['commission_account_name'] instanceof String)) {
            throw new Error("Expected the field `commission_account_name` to be a primitive type in the JSON string but got " + data['commission_account_name']);
        }
        // ensure the json data is a string
        if (data['commission_account_number'] && !(typeof data['commission_account_number'] === 'string' || data['commission_account_number'] instanceof String)) {
            throw new Error("Expected the field `commission_account_number` to be a primitive type in the JSON string but got " + data['commission_account_number']);
        }
        // ensure the json data is a string
        if (data['commission_bsb'] && !(typeof data['commission_bsb'] === 'string' || data['commission_bsb'] instanceof String)) {
            throw new Error("Expected the field `commission_bsb` to be a primitive type in the JSON string but got " + data['commission_bsb']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['bdms'])) {
            throw new Error("Expected the field `bdms` to be an array in the JSON data but got " + data['bdms']);
        }

        return true;
    }


}

BrokerDetail.RequiredProperties = ["id", "branch", "created_by", "name", "created_at", "updated_at"];

/**
 * @member {Number} id
 */
BrokerDetail.prototype['id'] = undefined;

/**
 * @member {module:models/Branch} branch
 */
BrokerDetail.prototype['branch'] = undefined;

/**
 * @member {module:models/User} created_by
 */
BrokerDetail.prototype['created_by'] = undefined;

/**
 * @member {String} name
 */
BrokerDetail.prototype['name'] = undefined;

/**
 * @member {String} company
 */
BrokerDetail.prototype['company'] = undefined;

/**
 * @member {String} email
 */
BrokerDetail.prototype['email'] = undefined;

/**
 * @member {String} phone
 */
BrokerDetail.prototype['phone'] = undefined;

/**
 * @member {String} address
 */
BrokerDetail.prototype['address'] = undefined;

/**
 * @member {String} commission_bank_name
 */
BrokerDetail.prototype['commission_bank_name'] = undefined;

/**
 * @member {String} commission_account_name
 */
BrokerDetail.prototype['commission_account_name'] = undefined;

/**
 * @member {String} commission_account_number
 */
BrokerDetail.prototype['commission_account_number'] = undefined;

/**
 * @member {String} commission_bsb
 */
BrokerDetail.prototype['commission_bsb'] = undefined;

/**
 * @member {Date} created_at
 */
BrokerDetail.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
BrokerDetail.prototype['updated_at'] = undefined;

/**
 * @member {Number} user
 */
BrokerDetail.prototype['user'] = undefined;

/**
 * @member {Array.<Number>} bdms
 */
BrokerDetail.prototype['bdms'] = undefined;






export default BrokerDetail;

