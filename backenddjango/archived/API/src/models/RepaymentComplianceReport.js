/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RepaymentComplianceReport model module.
 * @module models/RepaymentComplianceReport
 * @version 1.0.0
 */
class RepaymentComplianceReport {
    /**
     * Constructs a new <code>RepaymentComplianceReport</code>.
     * Serializer for repayment compliance report data
     * @alias module:models/RepaymentComplianceReport
     * @param totalRepayments {Number} 
     * @param paidOnTime {Number} 
     * @param paidLate {Number} 
     * @param missed {Number} 
     * @param complianceRate {Number} 
     * @param averageDaysLate {Number} 
     * @param totalAmountDue {Number} 
     * @param totalAmountPaid {Number} 
     * @param paymentRate {Number} 
     * @param monthlyBreakdown {Array.<Object.<String, Object>>} 
     */
    constructor(totalRepayments, paidOnTime, paidLate, missed, complianceRate, averageDaysLate, totalAmountDue, totalAmountPaid, paymentRate, monthlyBreakdown) { 
        
        RepaymentComplianceReport.initialize(this, totalRepayments, paidOnTime, paidLate, missed, complianceRate, averageDaysLate, totalAmountDue, totalAmountPaid, paymentRate, monthlyBreakdown);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, totalRepayments, paidOnTime, paidLate, missed, complianceRate, averageDaysLate, totalAmountDue, totalAmountPaid, paymentRate, monthlyBreakdown) { 
        obj['total_repayments'] = totalRepayments;
        obj['paid_on_time'] = paidOnTime;
        obj['paid_late'] = paidLate;
        obj['missed'] = missed;
        obj['compliance_rate'] = complianceRate;
        obj['average_days_late'] = averageDaysLate;
        obj['total_amount_due'] = totalAmountDue;
        obj['total_amount_paid'] = totalAmountPaid;
        obj['payment_rate'] = paymentRate;
        obj['monthly_breakdown'] = monthlyBreakdown;
    }

    /**
     * Constructs a <code>RepaymentComplianceReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/RepaymentComplianceReport} obj Optional instance to populate.
     * @return {module:models/RepaymentComplianceReport} The populated <code>RepaymentComplianceReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepaymentComplianceReport();

            if (data.hasOwnProperty('total_repayments')) {
                obj['total_repayments'] = ApiClient.convertToType(data['total_repayments'], 'Number');
            }
            if (data.hasOwnProperty('paid_on_time')) {
                obj['paid_on_time'] = ApiClient.convertToType(data['paid_on_time'], 'Number');
            }
            if (data.hasOwnProperty('paid_late')) {
                obj['paid_late'] = ApiClient.convertToType(data['paid_late'], 'Number');
            }
            if (data.hasOwnProperty('missed')) {
                obj['missed'] = ApiClient.convertToType(data['missed'], 'Number');
            }
            if (data.hasOwnProperty('compliance_rate')) {
                obj['compliance_rate'] = ApiClient.convertToType(data['compliance_rate'], 'Number');
            }
            if (data.hasOwnProperty('average_days_late')) {
                obj['average_days_late'] = ApiClient.convertToType(data['average_days_late'], 'Number');
            }
            if (data.hasOwnProperty('total_amount_due')) {
                obj['total_amount_due'] = ApiClient.convertToType(data['total_amount_due'], 'Number');
            }
            if (data.hasOwnProperty('total_amount_paid')) {
                obj['total_amount_paid'] = ApiClient.convertToType(data['total_amount_paid'], 'Number');
            }
            if (data.hasOwnProperty('payment_rate')) {
                obj['payment_rate'] = ApiClient.convertToType(data['payment_rate'], 'Number');
            }
            if (data.hasOwnProperty('monthly_breakdown')) {
                obj['monthly_breakdown'] = ApiClient.convertToType(data['monthly_breakdown'], [{'String': Object}]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RepaymentComplianceReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RepaymentComplianceReport</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RepaymentComplianceReport.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['total_amount_due'] && !(typeof data['total_amount_due'] === 'string' || data['total_amount_due'] instanceof String)) {
            throw new Error("Expected the field `total_amount_due` to be a primitive type in the JSON string but got " + data['total_amount_due']);
        }
        // ensure the json data is a string
        if (data['total_amount_paid'] && !(typeof data['total_amount_paid'] === 'string' || data['total_amount_paid'] instanceof String)) {
            throw new Error("Expected the field `total_amount_paid` to be a primitive type in the JSON string but got " + data['total_amount_paid']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['monthly_breakdown'])) {
            throw new Error("Expected the field `monthly_breakdown` to be an array in the JSON data but got " + data['monthly_breakdown']);
        }

        return true;
    }


}

RepaymentComplianceReport.RequiredProperties = ["total_repayments", "paid_on_time", "paid_late", "missed", "compliance_rate", "average_days_late", "total_amount_due", "total_amount_paid", "payment_rate", "monthly_breakdown"];

/**
 * @member {Number} total_repayments
 */
RepaymentComplianceReport.prototype['total_repayments'] = undefined;

/**
 * @member {Number} paid_on_time
 */
RepaymentComplianceReport.prototype['paid_on_time'] = undefined;

/**
 * @member {Number} paid_late
 */
RepaymentComplianceReport.prototype['paid_late'] = undefined;

/**
 * @member {Number} missed
 */
RepaymentComplianceReport.prototype['missed'] = undefined;

/**
 * @member {Number} compliance_rate
 */
RepaymentComplianceReport.prototype['compliance_rate'] = undefined;

/**
 * @member {Number} average_days_late
 */
RepaymentComplianceReport.prototype['average_days_late'] = undefined;

/**
 * @member {Number} total_amount_due
 */
RepaymentComplianceReport.prototype['total_amount_due'] = undefined;

/**
 * @member {Number} total_amount_paid
 */
RepaymentComplianceReport.prototype['total_amount_paid'] = undefined;

/**
 * @member {Number} payment_rate
 */
RepaymentComplianceReport.prototype['payment_rate'] = undefined;

/**
 * @member {Array.<Object.<String, Object>>} monthly_breakdown
 */
RepaymentComplianceReport.prototype['monthly_breakdown'] = undefined;






export default RepaymentComplianceReport;

