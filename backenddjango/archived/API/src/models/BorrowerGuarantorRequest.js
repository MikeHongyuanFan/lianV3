/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GuarantorTypeEnum from './GuarantorTypeEnum';

/**
 * The BorrowerGuarantorRequest model module.
 * @module models/BorrowerGuarantorRequest
 * @version 1.0.0
 */
class BorrowerGuarantorRequest {
    /**
     * Constructs a new <code>BorrowerGuarantorRequest</code>.
     * Serializer for guarantor information
     * @alias module:models/BorrowerGuarantorRequest
     */
    constructor() { 
        
        BorrowerGuarantorRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BorrowerGuarantorRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/BorrowerGuarantorRequest} obj Optional instance to populate.
     * @return {module:models/BorrowerGuarantorRequest} The populated <code>BorrowerGuarantorRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BorrowerGuarantorRequest();

            if (data.hasOwnProperty('guarantor_type')) {
                obj['guarantor_type'] = GuarantorTypeEnum.constructFromObject(data['guarantor_type']);
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('date_of_birth')) {
                obj['date_of_birth'] = ApiClient.convertToType(data['date_of_birth'], 'Date');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('company_name')) {
                obj['company_name'] = ApiClient.convertToType(data['company_name'], 'String');
            }
            if (data.hasOwnProperty('company_abn')) {
                obj['company_abn'] = ApiClient.convertToType(data['company_abn'], 'String');
            }
            if (data.hasOwnProperty('company_acn')) {
                obj['company_acn'] = ApiClient.convertToType(data['company_acn'], 'String');
            }
            if (data.hasOwnProperty('borrower')) {
                obj['borrower'] = ApiClient.convertToType(data['borrower'], 'Number');
            }
            if (data.hasOwnProperty('application')) {
                obj['application'] = ApiClient.convertToType(data['application'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BorrowerGuarantorRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BorrowerGuarantorRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['company_name'] && !(typeof data['company_name'] === 'string' || data['company_name'] instanceof String)) {
            throw new Error("Expected the field `company_name` to be a primitive type in the JSON string but got " + data['company_name']);
        }
        // ensure the json data is a string
        if (data['company_abn'] && !(typeof data['company_abn'] === 'string' || data['company_abn'] instanceof String)) {
            throw new Error("Expected the field `company_abn` to be a primitive type in the JSON string but got " + data['company_abn']);
        }
        // ensure the json data is a string
        if (data['company_acn'] && !(typeof data['company_acn'] === 'string' || data['company_acn'] instanceof String)) {
            throw new Error("Expected the field `company_acn` to be a primitive type in the JSON string but got " + data['company_acn']);
        }

        return true;
    }


}



/**
 * @member {module:models/GuarantorTypeEnum} guarantor_type
 */
BorrowerGuarantorRequest.prototype['guarantor_type'] = undefined;

/**
 * @member {String} first_name
 */
BorrowerGuarantorRequest.prototype['first_name'] = undefined;

/**
 * @member {String} last_name
 */
BorrowerGuarantorRequest.prototype['last_name'] = undefined;

/**
 * @member {Date} date_of_birth
 */
BorrowerGuarantorRequest.prototype['date_of_birth'] = undefined;

/**
 * @member {String} email
 */
BorrowerGuarantorRequest.prototype['email'] = undefined;

/**
 * @member {String} phone
 */
BorrowerGuarantorRequest.prototype['phone'] = undefined;

/**
 * @member {String} address
 */
BorrowerGuarantorRequest.prototype['address'] = undefined;

/**
 * @member {String} company_name
 */
BorrowerGuarantorRequest.prototype['company_name'] = undefined;

/**
 * @member {String} company_abn
 */
BorrowerGuarantorRequest.prototype['company_abn'] = undefined;

/**
 * @member {String} company_acn
 */
BorrowerGuarantorRequest.prototype['company_acn'] = undefined;

/**
 * @member {Number} borrower
 */
BorrowerGuarantorRequest.prototype['borrower'] = undefined;

/**
 * @member {Number} application
 */
BorrowerGuarantorRequest.prototype['application'] = undefined;






export default BorrowerGuarantorRequest;

