/**
 * CRM Loan Management System API
 * A comprehensive CRM system for loan applications with fully synchronized frontend and backend development.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CrmClientJs);
  }
}(this, function(expect, CrmClientJs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CrmClientJs.FundingCalculationInput();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FundingCalculationInput', function() {
    it('should create an instance of FundingCalculationInput', function() {
      // uncomment below and update the code to test FundingCalculationInput
      //var instance = new CrmClientJs.FundingCalculationInput();
      //expect(instance).to.be.a(CrmClientJs.FundingCalculationInput);
    });

    it('should have the property establishmentFeeRate (base name: "establishment_fee_rate")', function() {
      // uncomment below and update the code to test the property establishmentFeeRate
      //var instance = new CrmClientJs.FundingCalculationInput();
      //expect(instance).to.be();
    });

    it('should have the property cappedInterestMonths (base name: "capped_interest_months")', function() {
      // uncomment below and update the code to test the property cappedInterestMonths
      //var instance = new CrmClientJs.FundingCalculationInput();
      //expect(instance).to.be();
    });

    it('should have the property monthlyLineFeeRate (base name: "monthly_line_fee_rate")', function() {
      // uncomment below and update the code to test the property monthlyLineFeeRate
      //var instance = new CrmClientJs.FundingCalculationInput();
      //expect(instance).to.be();
    });

    it('should have the property brokerageFeeRate (base name: "brokerage_fee_rate")', function() {
      // uncomment below and update the code to test the property brokerageFeeRate
      //var instance = new CrmClientJs.FundingCalculationInput();
      //expect(instance).to.be();
    });

    it('should have the property applicationFee (base name: "application_fee")', function() {
      // uncomment below and update the code to test the property applicationFee
      //var instance = new CrmClientJs.FundingCalculationInput();
      //expect(instance).to.be();
    });

    it('should have the property dueDiligenceFee (base name: "due_diligence_fee")', function() {
      // uncomment below and update the code to test the property dueDiligenceFee
      //var instance = new CrmClientJs.FundingCalculationInput();
      //expect(instance).to.be();
    });

    it('should have the property legalFeeBeforeGst (base name: "legal_fee_before_gst")', function() {
      // uncomment below and update the code to test the property legalFeeBeforeGst
      //var instance = new CrmClientJs.FundingCalculationInput();
      //expect(instance).to.be();
    });

    it('should have the property valuationFee (base name: "valuation_fee")', function() {
      // uncomment below and update the code to test the property valuationFee
      //var instance = new CrmClientJs.FundingCalculationInput();
      //expect(instance).to.be();
    });

    it('should have the property monthlyAccountFee (base name: "monthly_account_fee")', function() {
      // uncomment below and update the code to test the property monthlyAccountFee
      //var instance = new CrmClientJs.FundingCalculationInput();
      //expect(instance).to.be();
    });

    it('should have the property workingFee (base name: "working_fee")', function() {
      // uncomment below and update the code to test the property workingFee
      //var instance = new CrmClientJs.FundingCalculationInput();
      //expect(instance).to.be();
    });

  });

}));
